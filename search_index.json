[["relational-databases-part-1.html", "Relational databases (Part 1) Learning objectives Relational databases Database design", " Relational databases (Part 1) Learning objectives Concepts Mission and objectives statements Relational databases Tables and fields Practical skills Writing a mission and objectives statement for your database (team assignment #1) Creating database tables and fields (team assignment #2) Documenting databases (team assignment #2) Relational databases Relational databases stores relations that are represented as tables. Each column of a table is an attribute (which I will call fields from now on), and tuples (or records) are set of attributes. Lets consider the table below which is a set of relations representing students. Each record is a unique student, who is defined by 4 attributes: their student ID, first name, last name, and program. The subject being represented in this table are the students, and all the students are represented by the same set of limited features and no student can exist in this database with different features than the others. A relational database is a collection of tables linked to one another, each representing a different subject (courses, buildings, animals, concerts, orders, conversations, families, foods, games, or anything that we wish to capture in the database), and each with their own set of fields, and records. The figure below shows how tables are linked to one another in the relational model. In the next few weeks, you will learn how to design your own relational database, so lets get started. Database design Mission and objectives As I mentioned in the opening chapter of this book, databases are created for a specific purpose, and that purpose should be clearly defined before you start creating tables and fields and their relationships. This is the first step of the database design process that Hernandez (2013) proposes in his book, so let us start there are well. Database mission statement The database mission statement is a short text written in general and accessible language that states the specific purpose of your database. It is important to note that it is not the same as the mission statement of the organization for which the database will be designed. This statement refers specifically to the database and what the database will do for the organization. To keep that in mind as you formulate your database mission statement, you may want to start the text the following way: The purpose of the [name of organization] database is This way you are less likely to forget that the database is what matters here. Ideally, your database mission statement would be aligned with the mission of the organization for which it is intended, so having a good understanding of what the mission of the organization is essential. In real life, this part of the database design process would likely involve conducting interviews with the key actors of the organizations, and across its different departments, to ensure that you have a good idea of the needs that your database will be addressing. In the context of this course, you will not be conducting interviews and will have to use your best judgment in ensuring that your database mission statement is related to the mission of the organization. Also, since organizations usually state their missions on their website, you can certainly use that information to help you. It should also be noted that the database that you will be proposing, and its mission statement, do not necessarily have to cover everything that an organization does. You could for instance, choose to develop a database that would support the teaching mission of a university, without considering or mentioning the other missions of the university such as research. Some other constraints that are present in the context of the course, but not in real life, are the minimum number of specific tasks that your database should be supporting (5) and the minimum number of required tables in your database design (10). You can use these requirements to try to gauge whether your mission statement is too narrow or too broad. A database for GummyBox GummyBox is a new store that specializes in the sale and delivery of gummy assortments, and which is in need of a database to support its operations. The mission for this database could be formulated as follows: The purpose of the GummyBox database is to maintain the data the company uses to best serve the sweet tooth of their customers. Database objectives statement The database objectives are general tasks supported by the database. One way to distinguish them from the database mission is to remember that the mission statement relates to what the organization does, while the database objectives relates to the specific tasks or needs of people within the organization (e.g. employees) or outside the organizaion (e.g. clients or users). Here are some example: Keep track of students progress in their programs Maintain vehicle inventory Manage song collections Manage team roster Keep track of players performance Here is a list of criteria to help you write a good objective statement: It represents a single task. It is clear. It does not contain unessential details. It states what the task is, but does not indicate how it will be done by the database. Objectives for the GummyBox database It was decided, after consultation with the GummyBox team, that their database will have the following objectives: Maintain customer information Keep track of orders Maintain information on gummies Collect gummy reviews Maintain a collection of standard gummy assortments Database structure Now that we have established the mission and objectives that the database will be supporting, we are ready to start working on the structure of the database itself. Tables The first step is to create the preliminary of tables that your database will contain. Tables are central to relational databases as they are representations of relations (thats where the name relational database comes from). The tables are made of records (rows) and fields (columns), that represent a single subject, which can be an object (users, employees, equipment, rooms, address) or an event (e.g, concerts, conferences, meetings). So at this point of the process, the question to ask yourself is: What are the objects and events that need to be stored in the database in order to fulfill its mission and objectives? If your building a database for a job placement agency, for example, your database would likely need to include jobs, job-seekers and employers, and agents. For a University, you might have students, courses, instructors, departments, etc. All tables should : Represent a single subject (object or event). have a primary key. minimize redundancy. Creating tables for your database (video) Fields Now that you have identified the different subjects (tables) that your database is dealing with, the next part of the process is to ask what characteristics of these subjects should be recorded in the database. This will determine what fields (also called columns, variables, features) are required for each of your tables. Every table needs to have at least one field that is going to be the primary key. The primary key is a unique identifier for each record that will be stored in the table, which means that it cannot appear twice in the table. The primary key is also what you will use to link tables together. When the primary key of a table is used in another table to form such a link between the tables, it is called a foreign key. All fields should: Be unique in the entire database. Represent a distinct characteristic. Contain a single value that cannot be deconstructed into smaller ones. Not contain a calculated value. Creating fields for your tables (video) Naming tables and fields There are also some guidelines to follow when naming your tables and fields to make your database easier to understand and navigate. Characteristics of a good table and field names (Hernandez, 2013) Rule Bad Good Accurate, unique, and meaningful to the organization TableA Employees Refers to a single subject (unless it is an associative table) Faculties/Departments Make two tables As short as possible CoursesOffered Courses Do not use words like list, records, data CoursesList Courses Does not use acronyms SRI Student_Ratings_of_Instruction Does not unduly restrict the data that can be entered into the table Fall_courses Courses For tables use the plural form of the name Employee Employees For fields use the singular form of the name First_Names First_Name Describing tables and fields Another important aspect of database management and design is documentation. A properly documented database ensures that the users understand what tables of the database contain and why they exist. Having good names to for your tables and fields might reduce the need for your database users to refer to the documentation all the time, but it certainly does not eliminate the need for it. Describing your tables and fields also help ensuring they are needed and well-designed. If you cannot describe the purpose of a table, it may be that it has, in fact, no puprose. Here are a few simple rules to follow: Clearly and concisely describe the table and field. For tables only, your description should also indicate why the table is necessary. Focus on what the table or fields contain rather than how they will specifically be used or accessed. Do not use examples in your descriptions. "]]
